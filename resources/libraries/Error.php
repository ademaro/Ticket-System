<?php

# Check was this file linked directly
if(!defined('BASEPATH')) exit('No direct script access allowed');

/**
 * Ticket System
 * 
 * Commercial application for PHP 4.3.2 or newer
 * 
 * @package			TicketSystem
 * @author			Eugene Serkin
 * @copyright		Copyright (c) 2010, Art-Coder
 * @license			http://localhost/license/
 * @link			http://art-coder.com
 * @since			Version 0.2
 * @filesource		
 */
 
//-----------------------------------------------

/**
 * Error Class
 * 
 * @package			TicketSystem
 * @subpackage		Libraries
 * @category		Libraries
 * @author			Eugene Serkin
 * @link			http://art-coder.com
 */

class Error {

	/**
	 * Webpage main address.
	 * @var	string
	 */
	private $baseUrl;

	/**
	 * Path to directory where to store error_log.
	 * @var	string
	 */
	private $rootPath;

	/**
	 * Name of the error log file.
	 * @var	string
	 */
	private $fileName;

	/**
	 * Code of error.
	 * @var	int
	 */
	private $errorCode;

	/**
	 * Message provided for specified error code.
	 * @var	string
	 */
	private $errorMsg;

	/**
	 * Current date and time.
	 * @var	string
	 */
	private $curTimeDate;

	/**
	 * Constructor.
	 * 
	 * @access	public
	 * @param	string		Webpage main address.
	 * @param	string		Path to directory where to store error_log.
	 * @param	string		Name of the error log file.
	 */
	public function __construct($base_url, $root_path, $file_name) {
		$this->baseUrl = $base_url;
		$this->rootPath = $root_path;
		$this->fileName = $file_name;
	}

	/* Standart Page Errors. */

	/**
	 * Error 404.
	 * 
	 * @access	public
	 */
	public function notFound() {
		$this->errorCode = 404;
		$this->curTimeDate = @date("Y-m-d H:i");
		$reqPage = $this->baseUrl.$_SERVER['REQUEST_URI'];
		$this->errorMsg = "Error: {$this->errorCode}\r\n\tThe requested page at this address: {$reqPage} was not found.\r\n\n";
		
		require_once(realpath(BASEPATH.'/errors/notfound'.EXT));
		$this->outputError($this->curTimeDate, $this->errorMsg);
	}

	/**
	 * Error 403.
	 * 
	 * @access	public
	 */
	public function forbidden() {
		$this->errorCode = 403;
		$this->curTimeDate = @date("Y-m-d H:i");
		$reqPage = $this->baseUrl.$_SERVER['REQUEST_URI'];
		$this->errorMsg = "Error: {$this->errorCode}\r\n\tThe requested page at this address: {$reqPage} is forbidden.\r\n\n";
		
		require_once(realpath(BASEPATH.'/errors/forbidden'.EXT));
		$this->outputError($this->curTimeDate, $this->errorMsg);
	}

	/**
	 * Writing the error to file.
	 * 
	 * @access	private
	 * @param	string		Current date and time.
	 * @param	string		Message generated by occurred error.
	 */
	private function outputError($ctdate, $msg) {
		# Message type
		$type = 3;
		$pfile = $this->rootPath.'/'.$this->fileName;
		
		if(!file_exists($pfile)) fopen($pfile, "w");
		error_log($ctdate." ".$msg, $type, realpath($pfile));
	}

}
//	END Error

/* End of file Error.php */
/* Location: ./resources/libraries/Error.php */
?>